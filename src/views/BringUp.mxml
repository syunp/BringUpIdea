<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="{data}" creationComplete="idea_map()" backgroundAlpha="0">
	
	<fx:Declarations>
		<!-- 非ビジュアルエレメント (サービス、値オブジェクトなど) をここに配置 -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import flashx.textLayout.formats.TextAlign;
			private var sp:Sprite = new Sprite();
			private var invisibleSp:Sprite = new Sprite();
			private var line:Sprite = new Sprite();
			private var plus:Boolean = false;
			private var add:Boolean = false;
			
			private var sp_arr:Array = new Array();
			
			private var start_x:uint = 0;
			private var start_y:uint = 0;
			private var end_x:uint = 0;
			private var end_y:uint = 0;
			
			private var dx:int;
			private var dy:int;
			
			public function idea_map():void{
				stage.scaleMode = StageScaleMode.NO_SCALE;
				stage.align = StageAlign.TOP_LEFT;
				
				var w:int = stage.stageWidth;
				var h:int = stage.stageHeight;
				var w2:int = w/2;
				var h2:int = h/2;
				
				//見えない背景を設置
				invisibleSp.graphics.beginFill(0x0);
				invisibleSp.graphics.drawRect(-w+w2,-h+h2,w*2,h*2);
				invisibleSp.graphics.endFill();
				invisibleSp.alpha = 0.0;
				s.addChild(invisibleSp);
				
				var waku:Sprite = new Sprite();
				waku.graphics.lineStyle(1);
				waku.graphics.moveTo(-w+w2,-h+h2);
				waku.graphics.lineTo(w+w2,-h+h2);
				waku.graphics.lineTo(w+w2,h+h2);
				waku.graphics.lineTo(-w+w2,h+h2);
				waku.graphics.lineTo(-w+w2,-h+h2);
				s.addChild(waku);
				
				s.addChild(line);
				s.addChild(sp);
				
				
				var t:TextField = new TextField();
				t.autoSize = TextAlign.CENTER;
				t.text=String(data);
				t.scaleX = t.scaleY = 2;
				t.x = -t.width/2;
				t.y = -t.height/2;
				sp.addChild(t);
				
				
				
				
				sp.graphics.lineStyle(4,0xFF0000);
				sp.graphics.beginFill(0xFFFFFF);
				sp.graphics.drawCircle(0, 0, t.width/2);
				sp.graphics.endFill();
				sp.x = w2;
				sp.y = h2;
				sp_arr.push(sp);

				
				button.addEventListener(MouseEvent.CLICK, b_click);
				invisibleSp.addEventListener(MouseEvent.MOUSE_DOWN,startDragSp);
				invisibleSp.addEventListener(MouseEvent.MOUSE_UP,stopDragSp);
			}
			private function startDragSp(e:MouseEvent):void{
				dx = mouseX - s.x;
				dy = mouseY - s.y;
				addEventListener(MouseEvent.MOUSE_MOVE, mouseMove);
				//removeEventListener(MouseEvent.CLICK, second_Click);
			}
			private function stopDragSp(e:MouseEvent):void{
				removeEventListener(MouseEvent.MOUSE_MOVE,startDragSp);
				removeEventListener(MouseEvent.MOUSE_MOVE,mouseMove);
			}
			private function mouseMove(e:MouseEvent):void{
				s.x = mouseX - dx;
				s.y = mouseY - dy;
				
			}
			
			private function b_click(e:MouseEvent):void{
				//bar.value=1.0;
				//s.scaleX = s.scaleY = bar.value;
				trace("b_click");
				
				for(var i:uint = 0; i<sp_arr.length; i++){
					sp_arr[i].addEventListener(MouseEvent.CLICK, first_Click);
				}
				
				invisibleSp.removeEventListener(MouseEvent.CLICK, second_Click);
			}
			
			private function first_Click(e:MouseEvent):void{
				
				trace("first_click");
				
				start_x = e.target.x;
				start_y = e.target.y;
				
				invisibleSp.addEventListener(MouseEvent.CLICK, second_Click);
			}
			
			private function second_Click(e:MouseEvent):void{					
					trace("second_click");
					
					var new_sp:Sprite = new Sprite();
					s.addChild(new_sp);
					new_sp.graphics.beginFill(0xFFFFFF * Math.random());
					new_sp.graphics.drawCircle(0, 0, 30);
					new_sp.graphics.endFill();
//					new_sp.x = mouseX;
//					new_sp.y = mouseY;
					new_sp.x = e.localX;
					new_sp.y = e.localY;
					
					sp_arr.push(new_sp);
					
					line.graphics.lineStyle(2, 0x00FF00);
					line.graphics.moveTo(start_x, start_y);
					line.graphics.lineTo(new_sp.x, new_sp.y);
					s.addChild(line);
					
					for(var i:uint = 0; i<sp_arr.length; i++){
						sp_arr[i].removeEventListener(MouseEvent.CLICK, first_Click);
						//sp_arr[i].addEventListener(MouseEvent.CLICK, exp);
					}
					
					
					invisibleSp.removeEventListener(MouseEvent.CLICK, second_Click);
			}
			
			private function exp(e:MouseEvent):void{	
				var dx:int = s.x-e.target.x;
				var dy:int = s.y-e.target.y;
				
				for(var i:uint = 0; i<sp_arr.length; i++){
					sp_arr[i].x+=dx;
					sp_arr[i].y+=dy;
				}
				s.x-=dx;
				s.y-=dy;
				
			}
			
			//protected function hslider1_changeHandler(event:Event):void{	s.scaleX = s.scaleY = bar.value;}
			
		]]>
	</fx:Script>
	<s:navigationContent>
		<s:Button label="Save" click="navigator.popView()"/>
	</s:navigationContent>
	<s:actionContent>
		<s:Button id="button" label="+"/>
	</s:actionContent>
	<s:SpriteVisualElement id="s"/>
	<!--<s:HSlider x="10" y="641" width="460" height="44" change="hslider1_changeHandler(event)"
			   maximum="2" minimum="0.5" stepSize="0.1" value="1" id="bar"/>-->
</s:View>
