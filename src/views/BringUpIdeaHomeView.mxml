<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" backgroundColor="0xE7E18F" backgroundAlpha="0.7" title="メニュー">
	
	<fx:Script>
		<![CDATA[
			import mx.core.mx_internal;
			
			import spark.transitions.CrossFadeViewTransition;
			private var already:Boolean=false;
			private var fade:CrossFadeViewTransition = new CrossFadeViewTransition();
			
			private function init():void{
				var orgDB:File = File.applicationDirectory.resolvePath("Idea_01.sqlite");
				var copyDB:File = File.applicationStorageDirectory.resolvePath("Idea_01.sqlite");
				if (!copyDB.exists)
				{
					var parentD:File = copyDB.parent;
					parentD.createDirectory();
					// 非同期的コピーは失敗する;
					try
					{
						//												copyDB.deleteFile();
						orgDB.copyTo(copyDB);
					}
					catch (error:SQLError)
					{
					}
				}
				else
				{
					orgDB = null;
				}
				
				var conn:SQLConnection = new SQLConnection();
				conn.addEventListener(SQLEvent.OPEN, onOpen);
				conn.openAsync(copyDB);
				
				var selectStmt:SQLStatement;
				
				function onOpen(e:SQLEvent):void{
					conn.removeEventListener(SQLEvent.OPEN, onOpen);
					
					selectStmt = new SQLStatement();
					selectStmt.sqlConnection = conn;
					var sql:String = "SELECT name FROM user";
					selectStmt.text = sql;
					
					selectStmt.addEventListener(SQLEvent.RESULT, resultHandler);
					
					selectStmt.execute();
				}
				
				function resultHandler(e:SQLEvent):void{
					selectStmt.removeEventListener(SQLEvent.RESULT, resultHandler);
					
					var result:SQLResult = selectStmt.getResult();
					
					// ローカルのDBにidとnameが無かったら
					if(result.data == null){
						trace(2);
						already=false;
					}
					else{
						trace(1);
						already=true;
					}
				}
			}
			protected function registButton_clickHandler(event:MouseEvent):void
			{
				if(!already){
					
					/*
					ローカルのDBから自分の名前を抜き出し、サーバー上のDBに検索をかける
					該当したもののmap_idを取り出す関数
					*/
					search_mine();
					
					//navigator.pushView(views.MyMap);
				}
				else{
//					navigator.defaultPushTransition=fade;
					navigator.pushView(views.Registry);
				}
			}
			
			private function search_mine():void{
				var copyDB:File = File.applicationStorageDirectory.resolvePath("Idea_01.sqlite");
				
				var conn:SQLConnection = new SQLConnection();
				conn.addEventListener(SQLEvent.OPEN, onOpen);
				conn.openAsync(copyDB);
				
				var selectStmt:SQLStatement;
				
				function onOpen(e:SQLEvent):void{
					conn.removeEventListener(SQLEvent.OPEN, onOpen);
					
					selectStmt = new SQLStatement();
					selectStmt.sqlConnection = conn;
					var sql:String = "SELECT name FROM user";
					selectStmt.text = sql;
					
					selectStmt.addEventListener(SQLEvent.RESULT, resultHandler);
					
					selectStmt.execute();
				}
				
				function resultHandler(e:SQLEvent):void{
					selectStmt.removeEventListener(SQLEvent.RESULT, resultHandler);
					
					var result:SQLResult = selectStmt.getResult();
					
					get_map_id(result.data[0].name);
					
				}
				
				/*
				creater_nameを投げて、map_idを取得する関数
				*/
				function get_map_id(s:String):void{
					System.useCodePage = true;
					
					var request:URLRequest = new URLRequest("http://www45.atpages.jp/peso0217/getMapId.php");
					request.method = URLRequestMethod.POST;
					
					var variable:URLVariables = new URLVariables();
					var val:Object = new Object();
					
					val["creater_name"] = s;
					
					for(var key1:String in val){
						variable["val["+key1+"]"] = val[key1];
					}
					
					request.data = variable;
					var loader:URLLoader = new URLLoader();
					loader.dataFormat = URLLoaderDataFormat.TEXT;
					loader.addEventListener(Event.COMPLETE, onComp);
					loader.load(request);
					
					function onComp(e:Event):void{
						var loader:URLLoader = e.target as URLLoader;
						loader.removeEventListener(Event.COMPLETE, onComp);
						//						trace(loader.data);
						
						var vars:URLVariables = new URLVariables(e.target.data);
						//↓これがmap_id
						//trace(vars.map_id);
						navigator.pushView(views.MyMap,vars.map_id);
					}
				}
				
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 非ビジュアルエレメント (サービス、値オブジェクトなど) をここに配置 -->
	</fx:Declarations>
	
	<s:Button id="myMapButton" x="93" y="172" width="295" height="82" label="My Idea Garden"
			  click="registButton_clickHandler(event)"/>
	<s:Button x="94" y="451" width="294" height="85" label="Random Idea Garden"
			  click="navigator.pushView(views.otherMap)"/>
	<s:Label x="44" y="117" fontFamily="ＭＳ ゴシック" text="あなたのアイデアガーデンはこちら"/>
	<s:Label x="41" y="400" fontFamily="ＭＳ ゴシック" text="様々な人のアイデアガーデンはこちら"/>
</s:View>
